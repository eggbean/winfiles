[Commands]
1\Name=Move to Trash
1\Command="copyq:\nvar trash_tab = '(trash)'\n\nvar tab_mime = 'application/x-copyq-user-tab'\nvar index_mime = 'application/x-copyq-user-index'\nvar time_mime = 'application/x-copyq-user-time'\n\nvar time = (new Date).toISOString()\n\nvar source_tab = selectedtab()\ntab(source_tab)\n\nvar items = selecteditems()\nvar sel = ItemSelection().current()\nconst rows = sel.rows()\nif (rows.length === 0)\n    abort()\n\nif (source_tab != trash_tab) {\n    var trashed = []\n    for (var i = 0; i < sel.length; ++i) {\n        var item = sel.itemAtIndex(i)\n\n        // Workaround: Convert QByteArray to ByteArray.\n        for (var format in item)\n            item[format] = ByteArray(item[format])\n\n        item[tab_mime] = source_tab\n        item[index_mime] = rows[i]\n        item[time_mime] = time\n        trashed.push(item)\n    }\n\n    tab(trash_tab)\n    write(0, trashed)\n    tab(source_tab)\n}\n\nsel.removeAll()\n\nvar newCurrentRow = rows[0]\nif (newCurrentRow >= length())\n    newCurrentRow = length() - 1\nselectItems(newCurrentRow)"
1\Icon=\xf1f8
2\Name=Undo Delete
2\Command="copyq:\nvar trash_tab = '(trash)'\n\nvar tab_mime = 'application/x-copyq-user-tab'\nvar index_mime = 'application/x-copyq-user-index'\nvar time_mime = 'application/x-copyq-user-time'\n\nvar remove_mime = [tab_mime, index_mime, time_mime]\ntab(trash_tab)\n\nif (length() == 0) {\n    popup('Nothing to undo')\n    abort()\n}\n\nvar item = getItem(0)\nvar target_tab = str(item[tab_mime]) || selectedtab()\nvar time = str(item[time_mime])\n\nvar items = []\n\ntab(trash_tab)\n\nvar target_index = 999999\nvar i = 0\nwhile (true) {\n    target_index = Math.min(target_index, item[index_mime] || 0)\n\n    for (var j in remove_mime)\n        delete item[remove_mime[j]]\n\n    items.push(item)\n\n    item = getitem(++i)\n    if ( !time || time !== str(item[time_mime]) )\n        break;\n}\n\nvar select_items = []\nvar remove_items = []\nfor (var j = 0; j < i; ++j) {\n    select_items.push(target_index + j)\n    remove_items.push(j)\n}\n\nshow(target_tab)\ntab(target_tab)\n\nitems.unshift(target_index)\ninsert.apply(this, items)\n\nselectItems.apply(this, select_items)\n\ntab(trash_tab)\nremove.apply(this, remove_items)"
2\Icon=\xf2ea
3\Name=Tab Key to Select Next/Previous
3\Command="copyq:\nvar selected = selectedItems();\nvar len = size();\nvar i = selected.length > 0 ? selected[0] : len;\nvar shortcut = str(data(mimeShortcut));\nif (shortcut.search(/shift/i) != -1) {\n    i--;\n    if (i < 0) {\n        i = len - 1;\n    }\n} else {\n    i++;\n    if (i >= len) {\n        i = 0;\n    }\n}\nselectItems(i)"
3\Icon=\xf362
4\Name=Store File Manager Metadata
4\Command="var originalFunction = global.clipboardFormatsToSave\nglobal.clipboardFormatsToSave = function() {\n    return originalFunction().concat([\n        mimeUriList,\n        'x-special/gnome-copied-files',\n        'application/x-kde-cutselection',\n    ])\n}"
4\Icon=\xf0c1
5\Name=Save Images from Browser
5\Command="copyq:\nconst imageFormat = 'image/png';\nconst imageData = clipboard(imageFormat);\nif (imageData.length > 0) {\n    setData(imageFormat, imageData);\n}"
5\Icon=\xf1c5
6\Name=Pin
6\Command=copyq: plugins.itempinned.pin()
6\InMenu=true
6\Icon=\xf08d
6\InternalId=copyq_pinned_pin
7\Name=Unpin
7\Command=copyq: plugins.itempinned.unpin()
7\InMenu=true
7\Icon=\xf08d
7\InternalId=copyq_pinned_unpin
size=13
8\Name=Tag as \x201cImportant\x201d
8\Command=copyq: plugins.itemtags.tag(decodeURIComponent('Important'))
8\Icon=\xf02b
8\InternalId=copyq_tags_tag:Important
8\InMenu=true
9\Name=Remove tag \x201cImportant\x201d
9\Command=copyq: plugins.itemtags.untag(decodeURIComponent('Important'))
9\Icon=\xf02b
9\InternalId=copyq_tags_untag:Important
9\InMenu=true
10\Name=Add a Tag
10\Command=copyq: plugins.itemtags.tag()
10\Icon=\xf02b
10\InternalId=copyq_tags_tag
1\InMenu=true
1\Shortcut=del, ctrl+x
10\InMenu=true
11\Name=Remove a Tag
11\Command=copyq: plugins.itemtags.untag()
11\Icon=\xf02b
11\InternalId=copyq_tags_untag
2\InMenu=true
2\Shortcut=ctrl+z
3\InMenu=true
3\Shortcut=tab, shift+tab
4\IsScript=true
5\Automatic=true
6\Input=!OUTPUT
6\Output=application/x-copyq-item-pinned
7\Input=application/x-copyq-item-pinned
8\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) && fail()
9\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) || fail()
11\Input=application/x-copyq-tags
11\InMenu=true
12\Name=Clear all tags
12\Command=copyq: plugins.itemtags.clearTags()
12\Input=application/x-copyq-tags
12\InMenu=true
12\Icon=\xf02b
12\InternalId=copyq_tags_clear
13\Name=Show/hide main window
13\Command=copyq: toggle()
13\IsGlobalShortcut=true
13\Icon=\xf022
13\GlobalShortcut=ctrl+shift+v
13\InternalId=copyq_global_toggle
14\Name=Copy next item
14\Command=copyq: next()
14\IsGlobalShortcut=true
14\Icon=\xf063
14\GlobalShortcut=ctrl+shift+f12
14\InternalId=copyq_global_copy_next
15\Name=Copy previous item
15\Command=copyq: previous()
15\IsGlobalShortcut=true
15\Icon=\xf062
15\GlobalShortcut=ctrl+shift+f11
15\InternalId=copyq_global_copy_previous
